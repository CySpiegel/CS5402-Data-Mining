}
final$FIT502<-cleaningFIT502(y$FIT502)
plot(final$FIT502)
cleaningFIT502<- function(x){
x<-average(x)
# the range is created base on the excel and after multiple run the graph
# this estimated points make sure we can find the outlier
minRange<-x[1]*0.01
maxRange<-x[1]*3
fix<-FALSE
for(i in 2 : NROW(x)){
if(x[i]>maxRange){
x[i]<- x[i]/100
}else{
if(x[i] < minRange){
x[i]<- x[i]*100
}
}
}
return(x);
}
final$FIT502<-cleaningFIT502(y$FIT502)
plot(final$FIT502)
cleaningFIT502<- function(x){
x<-average(x)
# the range is created base on the excel and after multiple run the graph
# this estimated points make sure we can find the outlier
minRange<-x[1]*0.1
maxRange<-x[1]*3
fix<-FALSE
for(i in 2 : NROW(x)){
if(x[i]<0.00009){
x[i]<-0
}
if(x[i]>maxRange){
x[i]<- x[i]/100
}else{
if(x[i] < minRange){
x[i]<- x[i]*100
}
}
}
return(x);
}
final$FIT502<-cleaningFIT502(y$FIT502)
plot(final$FIT502)
boxplot.stats(final$FIT502)
final$FIT503<-cleaningFIT503(y$FIT503)
cleaningFIT503<- function(x){
x<-average(x)
# the range is created base on the excel and after multiple run the graph
# this estimated points make sure we can find the outlier
minRange<-x[1]*0.1
maxRange<-x[1]*3
fix<-FALSE
for(i in 2 : NROW(x)){
if(x[i]<0.00009){
x[i]<-0
}
if(x[i]>maxRange){
x[i]<- x[i]/100
}else{
if(x[i] < minRange){
x[i]<- x[i]*100
}
}
}
return(x);
}
final$FIT503<-cleaningFIT503(y$FIT503)
plot(final$FIT503)
cleaningFIT503<- function(x){
x<-average(x)
# the range is created base on the excel and after multiple run the graph
# this estimated points make sure we can find the outlier
minRange<-x[1]*0.1
maxRange<-x[1]*1.5
fix<-FALSE
for(i in 2 : NROW(x)){
if(x[i]<0.00009){
x[i]<-0
}
if(x[i]>maxRange){
x[i]<- x[i]/100
}else{
if(x[i] < minRange){
x[i]<- x[i]*100
}
}
}
return(x);
}
final$FIT503<-cleaningFIT503(y$FIT503)
plot(final$FIT503)
cleaningFIT503<- function(x){
x<-average(x)
# the range is created base on the excel and after multiple run the graph
# this estimated points make sure we can find the outlier
minRange<-x[1]*0.1
maxRange<-x[1]*1.1
fix<-FALSE
for(i in 2 : NROW(x)){
if(x[i]<0.00009){
x[i]<-0
}
if(x[i]>maxRange){
x[i]<- x[i]/100
}else{
if(x[i] < minRange){
x[i]<- x[i]*100
}
}
}
return(x);
}
final$FIT503<-cleaningFIT503(y$FIT503)
plot(final$FIT503)
cleaningFIT503<- function(x){
x<-average(x)
# the range is created base on the excel and after multiple run the graph
# this estimated points make sure we can find the outlier
minRange<-x[1]*0.1
maxRange<-x[1]*1.9
fix<-FALSE
for(i in 2 : NROW(x)){
if(x[i]<0.00009){
x[i]<-0
}
if(x[i]>maxRange){
x[i]<- x[i]/100
}else{
if(x[i] < minRange){
x[i]<- x[i]*100
}
}
}
return(x);
}
final$FIT503<-cleaningFIT503(y$FIT503)
plot(final$FIT503)
boxplot(final$FIT503)
boxplot.stats(final$FIT503)
min(final$FIT503)
cleaningFIT502<- function(x){
x<-average(x)
# the range is created base on the excel and after multiple run the graph
# this estimated points make sure we can find the outlier
minRange<-x[1]*0.1
maxRange<-x[1]*3
fix<-FALSE
for(i in 2 : NROW(x)){
if(x[i]<0.00009){
x[i]<-0
}
if(x[i]>maxRange){
x[i]<- x[i]/100
}else{
if(x[i] < minRange){
x[i]<- x[i]*100
}
}
}
for(i in 1:NROW(x)){
if(x[i]<=0.06){
x[i]<-x[i]*10
}
}
return(x);
}
final$FIT503<-cleaningFIT503(y$FIT503)
min(final$FIT503)
boxplot.stats(final$FIT503)
cleaningFIT502<- function(x){
x<-average(x)
# the range is created base on the excel and after multiple run the graph
# this estimated points make sure we can find the outlier
minRange<-x[1]*0.1
maxRange<-x[1]*3
fix<-FALSE
for(i in 2 : NROW(x)){
if(x[i]<0.00009){
x[i]<-0
}
if(x[i]>maxRange){
x[i]<- x[i]/100
}else{
if(x[i] < minRange){
x[i]<- x[i]*100
}
}
}
for(i in 1:NROW(x)){
if(x[i]<=0.06){
x[i]<-x[i]*10
}
}
return(x);
}
final$FIT503<-cleaningFIT503(y$FIT503)
boxplot(final$FIT503)
plot(final$FIT503)
min(final$FIT503)
cleaningFIT502<- function(x){
x<-average(x)
# the range is created base on the excel and after multiple run the graph
# this estimated points make sure we can find the outlier
minRange<-x[1]*0.1
maxRange<-x[1]*3
fix<-FALSE
for(i in 2 : NROW(x)){
if(x[i]<0.00009){
x[i]<-0
}
if(x[i]>maxRange){
x[i]<- x[i]/100
}else{
if(x[i] < minRange){
x[i]<- x[i]*100
}
}
}
for(i in 1:NROW(x)){
if(x[i]<=x[1]){
x[i]<-x[i]*10
}
}
return(x);
}
final$FIT503<-cleaningFIT503(y$FIT503)
plot(final$FIT503)
cleaningFIT503<- function(x){
x<-average(x)
# the range is created base on the excel and after multiple run the graph
# this estimated points make sure we can find the outlier
minRange<-x[1]*0.1
maxRange<-x[1]*1.9
fix<-FALSE
for(i in 2 : NROW(x)){
if(x[i]<0.00009){
x[i]<-0
}
if(x[i]>maxRange){
x[i]<- x[i]/100
}else{
if(x[i] < minRange){
x[i]<- x[i]*100
}
}
}
return(x);
}
final$FIT503<-cleaningFIT503(y$FIT503)
plot(final$FIT503)
cleaningFIT503<- function(x){
x<-average(x)
# the range is created base on the excel and after multiple run the graph
# this estimated points make sure we can find the outlier
minRange<-x[1]*0.1
maxRange<-x[1]*1.9
fix<-FALSE
for(i in 2 : NROW(x)){
if(x[i]<0.00009){
x[i]<-0
}
if(x[i]>maxRange){
x[i]<- x[i]/100
}else{
if(x[i] < minRange){
x[i]<- x[i]*100
}
}
}
for(i in 1:NROW(x)){
if(x[i]<=0.06){
x[i]<-x[i]*10
}
}
return(x);
}
final$FIT503<-cleaningFIT503(y$FIT503)
plot(final$FIT503)
final$FIT504<-cleaningFIT503(y$FIT504)
plot(final$FIT504)
final$FIT504<-cleaningAIT502(y$FIT504)
final$PIT501<-cleaningAIT502(y$P501)
final$PIT501<-cleaningAIT502(y$P501)
final$PIT501<-cleaningAIT502(y$P501)
NROW(y$P501)
View(y$P501)
final$PIT501<-cleaningAIT502(y$PIT501)
plot(final$PIT501)
cleaningPIT502<-function(x){
x<-average(x)
# the range is created base on the excel and after multiple run the graph
# this estimated points make sure we can find the outlier
minRange<-0
maxRange<-10
for(i in 1 : NROW(x)){
if((x[i] < minRange | x[i] > maxRange) )
{
if(x[i] > maxRange ){
x[i]<-as.double(x[i]/100)
}
if(x[i]<minRange )
x[i]<-as.double(x[i]*as.double(100))
}
}
return(x);
}
final$PIT502<-cleaningPIT502(y$PIT502)
plot(final$PIT502)
cleaningPIT502<-function(x){
x<-average(x)
# the range is created base on the excel and after multiple run the graph
# this estimated points make sure we can find the outlier
minRange<-0
maxRange<-350
for(i in 1 : NROW(x)){
if((x[i] < minRange | x[i] > maxRange) )
{
if(x[i] > maxRange ){
x[i]<-as.double(x[i]/100)
}
if(x[i]<minRange )
x[i]<-as.double(x[i]*as.double(100))
}
}
return(x);
}
final$PIT502<-cleaningPIT502(y$PIT502)
plot(final$PIT502)
final$PIT503<-cleaningAIT502(y$PIT503)
plot(final$PIT503)
final$FIT601<-cleaningFIT301(y$FIT601)
final$FIT601<-average(y$FIT601)
average<-function(x){
#check if the first data is na or not
if(is.na(x[1])){
x[1]<-x[2]
}
for( i in 1:length(x)){
counter<-NULL
if(is.na(x[i]) & !is.na((x[i+1]))){
x[i]<-(x[i-1]+x[i+1])/2
}else{
if(is.na(x[i]) & is.na((x[i+1]))){
#if NA values is the end of data set
if(i==NROW(x)){
x[i]<-x[i-1]
}else{
counter<-i
while(is.na(x[counter])){
counter<-counter+1
}
x[i]<-(x[i-1]+x[counter])/2
}
}
x[i]<-x[i]
}
}
return(x)
}
final$FIT601<-average(y$FIT601)
final$FIT601<-cleaningFIT301(y$FIT601)
plot(final$FIT601)
final$AIT201<-cleaningAIT204(y$AIT201)
final$AIT201<-cleaningAIT203(y$AIT201)
final$AIT201<-cleaningAIT202(y$AIT201)
plot(final$FIT601)
plot(final$AIT201)
cleaningPIT502<-function(x){
x<-average(x)
# the range is created base on the excel and after multiple run the graph
# this estimated points make sure we can find the outlier
minRange<-100
maxRange<-200
for(i in 1 : NROW(x)){
if((x[i] < minRange | x[i] > maxRange) )
{
if(x[i] > maxRange ){
x[i]<-as.double(x[i]/100)
}
if(x[i]<minRange )
x[i]<-as.double(x[i]*as.double(100))
}
}
return(x);
}
cleaningPIT502<-function(x){
x<-average(x)
# the range is created base on the excel and after multiple run the graph
# this estimated points make sure we can find the outlier
minRange<-100
maxRange<-999
for(i in 1 : NROW(x)){
if((x[i] < minRange | x[i] > maxRange) )
{
if(x[i] > maxRange ){
x[i]<-as.double(x[i]/100)
}
if(x[i]<minRange )
x[i]<-as.double(x[i]*as.double(100))
}
}
return(x);
}
cleaningPIT502<-function(x){
x<-average(x)
# the range is created base on the excel and after multiple run the graph
# this estimated points make sure we can find the outlier
minRange<-0
maxRange<-350
for(i in 1 : NROW(x)){
if((x[i] < minRange | x[i] > maxRange) )
{
if(x[i] > maxRange ){
x[i]<-as.double(x[i]/100)
}
if(x[i]<minRange )
x[i]<-as.double(x[i]*as.double(100))
}
}
return(x);
}
cleaningAIT201<-function(x){
x<-average(x)
# the range is created base on the excel and after multiple run the graph
# this estimated points make sure we can find the outlier
minRange<-100
maxRange<-999
for(i in 1 : NROW(x)){
if((x[i] < minRange | x[i] > maxRange) )
{
if(x[i] > maxRange ){
x[i]<-as.double(x[i]/100)
}
if(x[i]<minRange )
x[i]<-as.double(x[i]*as.double(100))
}
}
return(x);
}
final$AIT201<-cleaningAIT201(y$AIT201)
plot(final$AIT201)
cleaningAIT201<-function(x){
x<-average(x)
# the range is created base on the excel and after multiple run the graph
# this estimated points make sure we can find the outlier
minRange<-100
maxRange<-150
for(i in 1 : NROW(x)){
if((x[i] < minRange | x[i] > maxRange) )
{
if(x[i] > maxRange ){
x[i]<-as.double(x[i]/100)
}
if(x[i]<minRange )
x[i]<-as.double(x[i]*as.double(100))
}
}
return(x);
}
final$AIT201<-cleaningAIT201(y$AIT201)
plot(final$AIT201)
boxplot.stats(final$AIT201)
cleaningAIT201<-function(x){
x<-average(x)
# the range is created base on the excel and after multiple run the graph
# this estimated points make sure we can find the outlier
minRange<-100
maxRange<-150
for(i in 1 : NROW(x)){
if((x[i] < minRange | x[i] > maxRange) )
{
if(x[i] > maxRange ){
x[i]<-as.double(x[i]/100)
}
if(x[i]<minRange )
x[i]<-as.double(x[i]*as.double(100))
}
}
return(x);
}
final$AIT201<-cleaningAIT201(y$AIT201)
boxplot.stats(final$AIT201)
write.csv(final,"/home/CS5402/finalFromLIT101.csv")
final$LIT101<-cleaningLIT101(final$LIT101)
final$AIT202<-cleaningAIT202(y$AIT202)
final$AIT203<-cleaningAIT203(y$AIT203)
final$FIT201<-cleaningFIT201(y$FIT201)
final$FIT301<-cleaningFIT301(y$FIT301)
final$LIT301<-cleaningLIT301(y$LIT301)
final$AIT402<-cleaningAIT402(y$AIT402)
final$FIT401<-cleaningFIT401(y$FIT401)
final$LIT401<-cleaningLIT401(y$LIT401)
final$AIT501<-cleaningAIT501(y$AIT501)
final$AIT502<-cleaningAIT502(y$AIT502)
final$AIT503<-cleaningAIT503(y$AIT503)
final$AIT504<-cleaningAIT504(y$AIT504)
final$FIT501<-cleaningFIT501(y$FIT501)
final$FIT502<-cleaningFIT502(y$FIT502)
final$FIT503<-cleaningFIT503(y$FIT503)
final$FIT504<-cleaningFIT503(y$FIT504)
final$PIT501<-cleaningAIT502(y$PIT501)
final$PIT502<-cleaningPIT502(y$PIT502)
final$PIT503<-cleaningAIT502(y$PIT503)
final$FIT601<-cleaningFIT301(y$FIT601)
final$AIT201<-cleaningAIT201(y$AIT201)
write.csv(final,file = "/home/CS5402/finalFromLIT101.csv")
write.csv(final,file = "finalFromLIT101.csv")
setwd("~/CS5402/theDataMiningProject")
write.csv(final,file = "finalFromLIT101.csv")
